name: Tests
on: [push]
jobs:
  php-unit-and-functional-tests:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./api
    strategy:
      fail-fast: true
      matrix:
        php-versions: ["8.1"]
    steps:
      # —— Setup Github actions —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Git checkout placeholder-service
        uses: actions/checkout@v2
      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true
      - name: Check PHP Version
        run: php -v
      # —— Composer —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install
      # —— Code style —— (Based on this package: https://github.com/OskarStark/php-cs-fixer-ga)
      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --config=api/.php-cs-fixer.dist.php --allow-risky=yes
      ## —— Tests ———————————————————————————————————————————————————————————
      - name: Run functionnal and unit tests with PHPUNIT
        run: vendor/bin/simple-phpunit tests
      # —— Code coverage ————————————————————————————————————————————————————
      #- name: Upload coverage to Codecov
      # uses: codecov/codecov-action@v1
      # with:
      # token: ${{ secrets.CODECOV_TOKEN }}
      # file: ./api/coverage.xml
      # flags: unittests
      # name: codecov-umbrella
      #fail_ci_if_error: true
  push_to_registry:
    name: Push Docker image build with docker-compose to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # Check out source code.
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and push container build with docker
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bespectacled:latest
          context: .
