name: SSH Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: debian
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22

      - name: Create env file
        run: |
          touch .env
          echo "API_PORT=${{secrets.API_PORT}}" >> .env
          echo "APP_PORT=${{secrets.APP_PORT}}" >> .env
          echo "APP_ENV=${{secrets.APP_ENV}}" >> .env
          echo "APP_SECRET=${{secrets.APP_SECRET}}" >> .env
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
          echo "JWT_SECRET=${{secrets.JWT_SECRET}}" >> .env
          echo "JWT_PASSPHRASE=${{secrets.JWT_PASSPHRASE}}" >> .env
          echo "JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}}" >> .env
          echo "JWT_PUBLIC_KEY=${{secrets.JWT_PUBLIC_KEY}}" >> .env
          echo "CORS_ALLOW_ORIGIN=${{secrets.CORS_ALLOW_ORIGIN}}" >> .env
          echo "APP_NAME=${{secrets.APP_NAME}}" >> .env
          echo "APP_MAIL=${{secrets.APP_MAIL}}" >> .env
          echo "MAILER_DSN=${{secrets.MAILER_DSN}}" >> .env
          echo "MERCURE_URL=${{secrets.MERCURE_URL}}" >> .env
          echo "MERCURE_PUBLIC_URL=${{secrets.MERCURE_PUBLIC_URL}}" >> .env
          echo "MERCURE_JWT_SECRET=${{secrets.MERCURE_JWT_SECRET}}" >> .env
          echo "MAILER_DSN=${{secrets.MAILER_DSN}}" >> .env
          echo "VITE_STRIPE_PUBLISHABLE_KEY=${{secrets.VITE_STRIPE_PUBLISHABLE_KEY}}" >> .env
          echo "VITE_STRIPE_ACCOUNT=${{secrets.VITE_STRIPE_ACCOUNT}}" >> .env
          echo "API_VERSION=${{secrets.API_VERSION}}" >> .env
          echo "VITE_NODE_ENV=${{secrets.VITE_NODE_ENV}}" >> .env
          echo "VITE_API_URL=${{secrets.VITE_API_URL}}" >> .env
          echo "LOCALE=${{secrets.LOCALE}}" >> .env

      - name: Create Docker network
        run: docker network create infrastructure

      - name: Build Docker image
        run: docker-compose build

      - name: Start Docker containers
        run: docker-compose up -d