security:
    password_hashers:
        # auto hasher with default options for the User class (and children)
        App\Entity\User: "auto"

        # auto hasher with custom options for all PasswordAuthenticatedUserInterface instances
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: "auto"
            cost: 15
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            user_checker: App\Security\UserEnabledChecker
            
        forget_password:
            pattern: ^/api/forget-password
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/forget-password
                username_path: email
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api/
            stateless: true
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
        refresh:
            pattern: ^/refresh-token
            stateless: true
            anonymous: true
        main:
            anonymous: lazy
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - {
              path: ^/api/users,
              roles: IS_AUTHENTICATED_FULLY,
              methods: [GET, PUT, PATCH, DELETE],
          }
        - { path: ^/refresh-token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
